TYPEMAP
UTF8                      T_UTF8
LaTeXML_Core_Token        T_PTROBJ_Token
LaTeXML_Core_Tokens       T_PTROBJ_Tokens
LaTeXML_Core_Tokenstack   T_PTROBJ_Tokenstack
LaTeXML_Core_Mouth        T_PTROBJ_Mouth

INPUT
T_UTF8
   /* One of these 2 SHOULD work, and seems faster, but leads to undefs & stuff in perl 5.10? */
   /*$var = ($type)SvPVutf8_nolen($arg);*/
   /*$var = ($type)SvPVutf8_nolen(sv_mortalcopy($arg));*/
   if(!SvUTF8($arg)){
     $arg = sv_mortalcopy($arg);
     sv_utf8_upgrade($arg); }
   $var = ($type)SvPV_nolen($arg);

T_PTROBJ_Token
  if(sv_isa($arg, \"LaTeXML::Core::Token\")){
    IV tmp = SvIV((SV*)SvRV($arg));
    $var = INT2PTR($type, tmp); }
  else
    croak(\"$var is not of type ${(my $ntt=$ntype)=~s/_/::/g; \$ntt}\")

T_PTROBJ_Tokens
  if(sv_isa($arg, \"LaTeXML::Core::Tokens\")){
    IV tmp = SvIV((SV*)SvRV($arg));
    $var = INT2PTR($type, tmp); }
  else
    croak(\"$var is not of type ${(my $ntt=$ntype)=~s/_/::/g; \$ntt}\")

T_PTROBJ_Tokenstack
  if(sv_isa($arg, \"LaTeXML::Core::Tokenstack\")){
    IV tmp = SvIV((SV*)SvRV($arg));
    $var = INT2PTR($type, tmp); }
  else
    croak(\"$var is not of type ${(my $ntt=$ntype)=~s/_/::/g; \$ntt}\")

T_PTROBJ_Mouth
  if(sv_isa($arg, \"LaTeXML::Core::Mouth\")){
    IV tmp = SvIV((SV*)SvRV($arg));
    $var = INT2PTR($type, tmp); }
  else
    croak(\"$var is not of type ${(my $ntt=$ntype)=~s/_/::/g; \$ntt}\")


OUTPUT
T_UTF8
  sv_setpv((SV*)$arg, $var);
  SvUTF8_on($arg);

T_PTROBJ_Token
  sv_setref_pv($arg, \"LaTeXML::Core::Token\", (void*)$var);

T_PTROBJ_Tokens
  sv_setref_pv($arg, \"LaTeXML::Core::Tokens\", (void*)$var);

T_PTROBJ_Tokenstack
  sv_setref_pv($arg, \"LaTeXML::Core::Tokenstack\", (void*)$var);

T_PTROBJ_Mouth
  sv_setref_pv($arg, \"LaTeXML::Core::Mouth\", (void*)$var);
